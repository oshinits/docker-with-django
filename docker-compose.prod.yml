version: '3.9'

services:
  web:
    container_name: ${APP_NAME}_backend
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    restart: unless-stopped
    volumes:
      - .:/code
      # - static_volume:/code/staticfiles
      # - media_volume:/code/mediafiles
    expose:
      - 8000
    ports:
      - 8000:8000
    depends_on:
      - redis
      - db
    env_file:
      - .env

  db:
    container_name: ${APP_NAME}_db
    restart: always
    image: kartoza/postgis:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  redis:
    restart: unless-stopped
    image: redis:latest
    container_name: ${APP_NAME}_redis

  celery:
    build: .
    restart: always
    command: celery -A config worker -l info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - web

  flower:
    build: .
    image: mher/flower:latest
    command: celery -A config --broker=${CELERY_BROKER_URL} flower
    volumes:
      - .:/code
    env_file:
      - ./.env
    ports:
      - 5557:5555
    depends_on:
      - redis
      - db

  nginx:
    build: ./nginx
    restart: always
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - .:/code
      # - static_volume:/code/staticfiles
      # - media_volume:/code/mediafiles
    depends_on:
      - web

volumes:
  postgres_data:
  # static_volume:
  # media_volume: